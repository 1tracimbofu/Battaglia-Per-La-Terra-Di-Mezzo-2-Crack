{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.ts.AppComponent.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","\n  <form>\n    <input #filter (keyup)=\"filterNodes(filter.value, tree)\" placeholder=\"filter nodes\"/>\n  </form>\n  <div style=\"height: 400px; width: 400px; overflow: hidden;\">\n\n    <tree-root\n      #tree\n      [nodes]=\"nodes\"\n      [options]=\"customTemplateStringOptions\"\n      [focused]=\"true\"\n      (event)=\"onEvent($event)\"\n      (initialized)=\"onInitialized(tree)\"\n    >\n      <ng-template #treeNodeTemplate let-node>\n        <span title=\"{{node.data.subTitle}}\">{{ node.data.name }}</span>\n        <span class=\"pull-right\">{{ childrenCount(node) }}</span>\n        <button (click)=\"go($event)\">Custom Action</button>\n      </ng-template>\n      <ng-template #loadingTemplate>Loading, please hold....</ng-template>\n    </tree-root>\n  </div>\n  <br>\n  <p>Keys:</p>\n  down | up | left | right | space | enter\n  <p>Mouse:</p>\n  click to select | shift+click to select multi\n  <p>API:</p>\n  <button (click)=\"tree.treeModel.focusNextNode()\">next node</button>\n  <button (click)=\"tree.treeModel.focusPreviousNode()\">previous node</button>\n  <button (click)=\"tree.treeModel.focusDrillDown()\">drill down</button>\n  <button (click)=\"tree.treeModel.focusDrillUp()\">drill up</button>\n  <button (click)=\"customTemplateStringOptions.allowDrag = true\">allowDrag</button>\n  <p></p>\n  <button\n    [disabled]=\"!tree.treeModel.getFocusedNode()\"\n    (click)=\"tree.treeModel.getFocusedNode().toggleActivated()\">\n    {{ tree.treeModel.getFocusedNode()?.isActive ? 'deactivate' : 'activate' }}\n  </button>\n  <button\n    [disabled]=\"!tree.treeModel.getFocusedNode()\"\n    (click)=\"tree.treeModel.getFocusedNode().toggleExpanded()\">\n    {{ tree.treeModel.getFocusedNode()?.isExpanded ? 'collapse' : 'expand' }}\n  </button>\n  <button\n    [disabled]=\"!tree.treeModel.getFocusedNode()\"\n    (click)=\"tree.treeModel.getFocusedNode().blur()\">\n    blur\n  </button>\n  <button\n    (click)=\"addNode(tree)\">\n    Add Node\n  </button>\n  <button\n    (click)=\"activateSubSub(tree)\">\n    Activate inner node\n  </button>\n  <button\n    (click)=\"tree.treeModel.expandAll()\">\n    Expand All\n  </button>\n  <button\n    (click)=\"tree.treeModel.collapseAll()\">\n    Collapse All\n  </button>\n  <button\n    (click)=\"activeNodes(tree.treeModel)\">\n    getActiveNodes()\n  </button>\n  ","import { Component, Input, OnInit } from '@angular/core';\nimport { TreeNode, TreeModel, TREE_ACTIONS, KEYS, IActionMapping, ITreeOptions } from 'angular-tree-component';\n\nconst actionMapping: IActionMapping = {\n  mouse: {\n    contextMenu: (tree, node, $event) => {\n      $event.preventDefault();\n      alert(`context menu for ${node.data.name}`);\n    },\n    dblClick: (tree, node, $event) => {\n      if (node.hasChildren) {\n        TREE_ACTIONS.TOGGLE_EXPANDED(tree, node, $event);\n      }\n    },\n    click: (tree, node, $event) => {\n      $event.shiftKey\n        ? TREE_ACTIONS.TOGGLE_ACTIVE_MULTI(tree, node, $event)\n        : TREE_ACTIONS.TOGGLE_ACTIVE(tree, node, $event)\n    }\n  },\n  keys: {\n    [KEYS.ENTER]: (tree, node, $event) => alert(`This is ${node.data.name}`)\n  }\n};\n\n@Component({\n  selector: 'app-root',\n  styles: [\n    `button: {\n        line - height: 24px;\n        box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.5);\n        border: none;\n        border-radius: 2px;\n        background: #A3D9F5;\n        cursor: pointer;\n        margin: 0 3px;\n      }`\n  ],\n  template: `\n  <form>\n    <input #filter (keyup)=\"filterNodes(filter.value, tree)\" placeholder=\"filter nodes\"/>\n  </form>\n  <div style=\"height: 400px; width: 400px; overflow: hidden;\">\n\n    <tree-root\n      #tree\n      [nodes]=\"nodes\"\n      [options]=\"customTemplateStringOptions\"\n      [focused]=\"true\"\n      (event)=\"onEvent($event)\"\n      (initialized)=\"onInitialized(tree)\"\n    >\n      <ng-template #treeNodeTemplate let-node>\n        <span title=\"{{node.data.subTitle}}\">{{ node.data.name }}</span>\n        <span class=\"pull-right\">{{ childrenCount(node) }}</span>\n        <button (click)=\"go($event)\">Custom Action</button>\n      </ng-template>\n      <ng-template #loadingTemplate>Loading, please hold....</ng-template>\n    </tree-root>\n  </div>\n  <br>\n  <p>Keys:</p>\n  down | up | left | right | space | enter\n  <p>Mouse:</p>\n  click to select | shift+click to select multi\n  <p>API:</p>\n  <button (click)=\"tree.treeModel.focusNextNode()\">next node</button>\n  <button (click)=\"tree.treeModel.focusPreviousNode()\">previous node</button>\n  <button (click)=\"tree.treeModel.focusDrillDown()\">drill down</button>\n  <button (click)=\"tree.treeModel.focusDrillUp()\">drill up</button>\n  <button (click)=\"customTemplateStringOptions.allowDrag = true\">allowDrag</button>\n  <p></p>\n  <button\n    [disabled]=\"!tree.treeModel.getFocusedNode()\"\n    (click)=\"tree.treeModel.getFocusedNode().toggleActivated()\">\n    {{ tree.treeModel.getFocusedNode()?.isActive ? 'deactivate' : 'activate' }}\n  </button>\n  <button\n    [disabled]=\"!tree.treeModel.getFocusedNode()\"\n    (click)=\"tree.treeModel.getFocusedNode().toggleExpanded()\">\n    {{ tree.treeModel.getFocusedNode()?.isExpanded ? 'collapse' : 'expand' }}\n  </button>\n  <button\n    [disabled]=\"!tree.treeModel.getFocusedNode()\"\n    (click)=\"tree.treeModel.getFocusedNode().blur()\">\n    blur\n  </button>\n  <button\n    (click)=\"addNode(tree)\">\n    Add Node\n  </button>\n  <button\n    (click)=\"activateSubSub(tree)\">\n    Activate inner node\n  </button>\n  <button\n    (click)=\"tree.treeModel.expandAll()\">\n    Expand All\n  </button>\n  <button\n    (click)=\"tree.treeModel.collapseAll()\">\n    Collapse All\n  </button>\n  <button\n    (click)=\"activeNodes(tree.treeModel)\">\n    getActiveNodes()\n  </button>\n  `\n})\nexport class AppComponent implements OnInit {\n  nodes: any[];\n  nodes2 = [{name: 'root'}, {name: 'root2'}];\n  asyncChildren = new Array(4).fill(null).map((item, n) => ({\n    name: 'async child2.' + n,\n    subTitle: 'async child ' + n,\n    hasChildren: n < 5\n  }));\n  customTemplateStringOptions: ITreeOptions = {\n    // displayField: 'subTitle',\n    isExpandedField: 'expanded',\n    idField: 'uuid',\n    getChildren: this.getChildren.bind(this),\n    actionMapping,\n    nodeHeight: 23,\n    allowDrag: (node) => {\n      // console.log('allowDrag?');\n      return true;\n    },\n    allowDrop: (node) => {\n      // console.log('allowDrop?');\n      return true;\n    },\n    useVirtualScroll: true,\n    animateExpand: true\n  };\n  constructor() {\n  }\n  ngOnInit() {\n    setTimeout(() => {\n      this.nodes = [\n        {\n          expanded: true,\n          name: 'root expanded',\n          subTitle: 'the root',\n          children: [\n            {\n              name: 'child2',\n              subTitle: 'a bad child',\n              hasChildren: false\n            },\n            {\n              name: 'child2',\n              subTitle: 'a bad child',\n              hasChildren: false\n            }\n          ]\n        },\n        {\n          name: 'root2',\n          subTitle: 'the second root',\n          children: [\n            {\n              name: 'child2.1',\n              subTitle: 'new and improved',\n              uuid: '11',\n              hasChildren: false\n            }, {\n              name: 'child2.2',\n              subTitle: 'new and improved2',\n              children: [\n                {\n                  uuid: 1001,\n                  name: 'subsub',\n                  subTitle: 'subsub',\n                  hasChildren: false\n                }\n              ]\n            }\n          ]\n        },\n        {\n          name: 'asyncroot',\n          hasChildren: true\n        }\n      ];\n\n      for (let i = 0; i < 1000; i++) {\n        this.nodes.push({\n          name: `rootDynamic${i}`,\n          subTitle: `root created dynamically ${i}`,\n          children: new Array(10).fill(null).map((item, n) => ({\n            name: `rootChildDynamic${i}.${n}`,\n            subTitle: `rootChildDynamicTitle${i}.${n}`\n          }))\n        });\n      }\n    }, 1);\n  }\n\n  getChildren(node: TreeNode) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => resolve(this.asyncChildren.map((c) => {\n        return Object.assign({}, c, {\n          hasChildren: node.level < 5\n        });\n      })), 2000);\n    });\n  }\n\n  addNode(tree: any) {\n    this.nodes[0].children.push({\n\n      name: 'a new child'\n    });\n    tree.treeModel.update();\n  }\n\n  childrenCount(node: TreeNode): string {\n    return node && node.children ? `(${node.children.length})` : '';\n  }\n\n  filterNodes(text: string, tree: any) {\n    tree.treeModel.filterNodes(text);\n  }\n\n  activateSubSub(tree: any) {\n    // tree.treeModel.getNodeBy((node) => node.data.name === 'subsub')\n    tree.treeModel.getNodeById(1001)\n      .setActiveAndVisible();\n  }\n\n  onEvent(event: any) {\n    console.log(event);\n  }\n\n  onInitialized(tree: any) {\n    // tree.treeModel.getNodeById('11').setActiveAndVisible();\n  }\n\n  go($event: any) {\n    $event.stopPropagation();\n    alert('this method is on the app component');\n  }\n\n  activeNodes(treeModel: TreeModel) {\n    console.log(treeModel.activeNodes);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { TreeModule } from 'angular-tree-component';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    TreeModule,\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}